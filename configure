#! /bin/sh

# Functions

function add_symbolic_link () {
  ln -s $1 $2
  if [ $? -eq 0 ]; then
    echo "Added" $2 "->" $1
  else
    echo "Add failed" $2 "->" $1
    exit 1
  fi
}

function remove_symbolic_link () {
  rm -rf $1
  if [ $? -eq 0 ]; then
    echo "Removed" $1
  else
    echo "Remove failed" $1
    exit 1
  fi
}

function add_if_not_exists () {
  echo "* $1: Install"
  if ! brew list $1 > /dev/null 2>&1; then
    brew install $1
    if [ ! $? -eq 0 ]; then exit 1 ;fi
    brew link $1 --force
  else
    echo "Already installed"
  fi
  echo
}

# Constants

CURRENT_DIRECTORY=$(pwd)

ZSH_PATH=$CURRENT_DIRECTORY/zsh
VIM_PATH=$CURRENT_DIRECTORY/vim
TMUX_PATH=$CURRENT_DIRECTORY/tmux

# Confirm

if [ -d ~/.zsh ] || [ -f ~/.zshrc ] || [ -d ~/.vim ] || [ -f ~/.vimrc ] || [ -d ~/.tmux ] || [ -f ~/.tmux.conf ]; then
  read -p "The file exists. Do you want to overwrite it ? [y/N]: " yn </dev/tty
  case "$yn" in [yY]*) ;; *) exit ;; esac
  echo
fi

# Remote

if ! git remote > /dev/null 2>&1 || ! git remote -v | grep 'calmery/dotfiles' > /dev/null 2>&1; then
  echo "* Git: Clone"
  git clone git@github.com:calmery/Dotfiles.git ~/.dotfiles --recursive
  if [ ! $? -eq 0 ]; then
    echo "Please remove ~/.dotfiles"
    exit 1
  fi
  echo "Added ~/.dotfiles"
  ZSH_PATH=~/.dotfiles/zsh
  VIM_PATH=~/.dotfiles/vim
  TMUX_PATH=~/.dotfiles/tmux
  echo
fi

# Homebrew

echo "* Homebrew: Install"

if ! type brew > /dev/null 2>&1; then
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  if [ ! $? -eq 0 ]; then exit 1 ;fi
else
  echo "Already installed"
fi

echo

echo "* Homebrew: Update"

brew update

echo

# Zsh

add_if_not_exists zsh

## Change default shell to zsh

if [ -f /etc/shells ]; then
  if ! cat /etc/shells | grep $(which zsh) > /dev/null 2>&1; then
    echo $(which zsh) >> /etc/shells
    chsh -s $(which zsh)
  fi
else
  echo "Not Found /etc/shells"
  exit 1
fi

if [ ! $SHELL = $(which zsh) ]; then
  chsh -s $(which zsh)
  echo
fi

# Zplug

add_if_not_exists zplug

## Symbolic Links

echo "* Zsh: Create symbolic links"

if [ -d ~/.zsh ]; then remove_symbolic_link ~/.zsh ;fi
if [ -f ~/.zshrc ]; then remove_symbolic_link ~/.zshrc ;fi

add_symbolic_link $ZSH_PATH/.zsh ~/.zsh
add_symbolic_link $ZSH_PATH/.zshrc ~/.zshrc

echo

# Vim

add_if_not_exists vim

echo "* Vim: Create symbolic links"

if [ -d ~/.vim ]; then remove_symbolic_link ~/.vim ;fi
if [ -f ~/.vimrc ]; then remove_symbolic_link ~/.vimrc ;fi

add_symbolic_link $VIM_PATH/.vim ~/.vim
add_symbolic_link $VIM_PATH/.vimrc ~/.vimrc

echo

# tmux

add_if_not_exists tmux

echo "* tmux: Create symbolic links"

if [ -d ~/.tmux ]; then remove_symbolic_link ~/.tmux ;fi
if [ -f ~/.tmux.conf ]; then remove_symbolic_link ~/.tmux.conf ;fi

add_symbolic_link $TMUX_PATH/.tmux ~/.tmux
add_symbolic_link $TMUX_PATH/.tmux.conf ~/.tmux.conf

echo

# Atom

echo "* Atom: Install"

if ! brew cask list atom > /dev/null 2>&1; then
  brew cask install atom
  if [ ! $? -eq 0 ]; then exit 1 ;fi

  apm install atom-beautify \
              atom-easy-jsdoc \
              atom-ide-ui \
              editorconfig \
              file-icons \
              tree-view-git-status \
              atom-typescript \
              firacode
else
  echo "Already installed"
fi

echo

# Google Chrome

echo "* Google Chrome: Install"

if ! brew cask list google-chrome > /dev/null 2>&1; then
  brew cask install google-chrome
  if [ ! $? -eq 0 ]; then exit 1 ;fi
else
  echo "Already installed"
fi

echo

# Dependencies

add_if_not_exists nvm
add_if_not_exists pyenv
add_if_not_exists rbenv
add_if_not_exists goenv

# Memos

echo "Memos"
echo
echo "Atom: Change Syntax Theme to Solarized Dark."
echo "Terminal: Change Profile to Solarized Dark."
echo
echo "Configured"
echo "Please run \`source ~/.zshrc\`"

# Exit

exit 0
